import React, { useState } from "react";
import {
  Container,
  Row,
  Col,
  Form,
  InputGroup,
  Nav,
  Button,
  Image,
} from "react-bootstrap";
import { FaSearch, FaCog, FaEllipsisH } from "react-icons/fa";
import SidebarLeft from "../../components/layout/SidebarLeft/SidebarLeft";
import SidebarRight from "../../components/layout/SidebarRight/SidebarRight"; // Ensure this path is correct

function NotificationPage() {
  const [activeTab, setActiveTab] = useState("all"); // State for notification tabs

  // Dummy data for notifications
  const notifications = [
    {
      id: 1,
      type: "mention",
      user: "myles",
      content: "it was in fact NOT a one time thing",
      tags: ["#art"],
      image: "pic.x.com/7Zzjj5bD7G",
      timestamp: "10 giờ trước",
      avatar: "https://via.placeholder.com/40", // Placeholder for user avatar
    },

    {
      id: 3,
      type: "community",
      content:
          "Ghi chép cho cộng đồng. Người đọc đã thêm Ghi chép cho cộng đồng vào một bài đăng mà bạn đã thích, trả lời hoặc đăng lại",
      image: "This image is generated by AI",
      timestamp: "2 giờ trước",
    },
  ];

  // Dữ liệu giả cho các chủ đề đang nổi bật (from previous example)
  const trendingTopics = [
    {
      id: 1,
      category: "Chủ đề nổi trội ở Việt Nam",
      title: "Success",
      posts: 210,
    },
    {
      id: 2,
      category: "Chủ đề nổi trội ở Việt Nam",
      title: "#riyadh",
      posts: "1,12 Tr", // Using string as per image
    },
    {
      id: 3,
      category: "Chủ đề nổi trội ở Việt Nam",
      title: "#khảo_oam",
      posts: 210,
    },
    {
      id: 4,
      category: "Chủ đề nổi trội ở Việt Nam",
      title: "Inspiring",
      posts: "46,3 N", // Using string as per image
    },
  ];

  const suggestedFollows = [
    {
      id: 1,
      name: "Người dùng 1",
      username: "@user1",
      avatar: "https://via.placeholder.com/40",
    },
    {
      id: 2,
      name: "Người dùng 2",
      username: "@user2",
      avatar: "https://via.placeholder.com/40",
    },
    // Add more as needed
  ];

  const renderNotificationContent = () => {
    let filteredNotifications = notifications;
    // In a real application, you would filter based on activeTab
    // For now, we'll display all as an example or adjust content based on type
    return (
        <div>
          {filteredNotifications.map((notification) => (
              <div key={notification.id} className="p-3 border-bottom">
                {notification.type === "mention" && (
                    <div className="d-flex align-items-start">
                      <Image
                          src={notification.avatar}
                          roundedCircle
                          className="me-2"
                          style={{ width: "40px", height: "40px" }}
                      />
                      <div>
                        <div className="d-flex justify-content-between align-items-center">
                          <p className="fw-bold mb-0">{notification.user}</p>
                          <Button variant="link" className="text-dark p-0">
                            <FaEllipsisH />
                          </Button>
                        </div>
                        <p className="mb-1">{notification.content}</p>
                        {notification.tags && (
                            <p className="text-primary small mb-1">
                              {notification.tags.map((tag, index) => (
                                  <span key={index} className="me-1">
                          {tag}
                        </span>
                              ))}
                            </p>
                        )}
                        {notification.image &&
                            notification.image.startsWith("http") && (
                                <Image
                                    src={notification.image}
                                    fluid
                                    className="mt-2"
                                    style={{ maxWidth: "100%", height: "auto" }}
                                />
                            )}
                        {notification.image &&
                            notification.image.startsWith(
                                "This image is generated by AI"
                            ) && (
                                <p className="text-muted small mt-2">
                                  {notification.image}
                                </p>
                            )}
                      </div>
                    </div>
                )}
                {notification.type === "system" && (
                    <div className="d-flex align-items-start">
                      <FaCog
                          className="text-muted me-2"
                          style={{ fontSize: "24px" }}
                      />{" "}
                      {/* Icon for system notification */}
                      <div>
                        <p className="fw-bold mb-1">Thông báo</p>
                        <p className="mb-0">{notification.content}</p>
                        <p className="text-muted small mb-0">
                          {notification.timestamp}
                        </p>
                      </div>
                    </div>
                )}
                {notification.type === "community" && (
                    <div className="d-flex align-items-start">
                      {/* Assuming you have an icon for community or use a generic one */}
                      <i
                          className="bi bi-people-fill text-muted me-2"
                          style={{ fontSize: "24px" }}
                      ></i>{" "}
                      {/* Example Bootstrap Icon */}
                      {/* If using react-icons: <FaUsers className="text-muted me-2" style={{ fontSize: '24px' }} /> */}
                      <div>
                        <p className="fw-bold mb-1">
                          {notification.content.split(". ")[0]}
                        </p>
                        <p className="mb-0">{notification.content.split(". ")[1]}</p>
                        {notification.image && (
                            <p className="text-muted small mt-2">
                              {notification.image}
                            </p>
                        )}
                      </div>
                    </div>
                )}
              </div>
          ))}
        </div>
    );
  };

  return (
      <div className="d-flex min-vh-100 bg-light">
        {/* Sidebar trái */}
        <div className="d-none d-lg-block">
          <SidebarLeft />
        </div>

        {/* Main Content Area - Notifications */}
        <div className="d-flex flex-column flex-grow-1 border-start border-end bg-white">
          {/* Header/Search Bar for Notifications Page */}
          <div
              className="sticky-top bg-white border-bottom py-2"
              style={{ zIndex: 1020 }}
          >
            <Container fluid>
              <Row className="align-items-center">
                <Col xs={6} className="text-start">
                  <h5 className="fw-bold mb-0">Thông báo</h5>
                </Col>
                <Col xs={6} className="text-end">
                  <Button variant="link" className="text-dark p-0">
                    <FaCog /> {/* Settings icon */}
                  </Button>
                </Col>
              </Row>

              {/* Navigation Tabs for Notifications */}
              <Nav
                  variant="underline"
                  className="mt-2 nav-justified notification-tabs"
              >
                <Nav.Item>
                  <Nav.Link
                      onClick={() => setActiveTab("all")}
                      className={`text-dark fw-bold ${
                          activeTab === "all" ? "active" : ""
                      }`}
                  >
                    Tất cả
                  </Nav.Link>
                </Nav.Item>
                <Nav.Item>
                  <Nav.Link
                      onClick={() => setActiveTab("verified")}
                      className={`text-dark fw-bold ${
                          activeTab === "verified" ? "active" : ""
                      }`}
                  >
                    Đã xác nhận
                  </Nav.Link>
                </Nav.Item>
                <Nav.Item>
                  <Nav.Link
                      onClick={() => setActiveTab("mentions")}
                      className={`text-dark fw-bold ${
                          activeTab === "mentions" ? "active" : ""
                      }`}
                  >
                    Đề cập
                  </Nav.Link>
                </Nav.Item>
              </Nav>
            </Container>
          </div>

          {/* Notification Feed Content */}
          <div className="flex-grow-1 overflow-auto">
            {renderNotificationContent()}
          </div>
        </div>

        {/* Right Sidebar - "Những điều đang diễn ra" and "Gợi ý theo dõi" */}
        {/* This is the corrected section */}
        <div
            className="d-none d-lg-block border-start"
            style={{ width: "350px" }}
        >
          <SidebarRight
              trendingTopics={trendingTopics}
              suggestedFollows={suggestedFollows}
          />
        </div>
      </div>
  );
}

export default NotificationPage;