import React, { useState, useEffect } from "react";
import { Container, Row, Col, Image, Button, Nav } from "react-bootstrap";
import {
  FaArrowLeft,
  FaCalendarAlt,
  FaCheckCircle,
  FaMapMarkerAlt,
  FaLink,
} from "react-icons/fa";
import { Link, useParams, useNavigate } from "react-router-dom";
import TweetCard from "../../components/posts/TweetCard/TweetCard";
import EditProfileModal from "../../components/profile/EditProfileModal";
import SidebarLeft from "../../components/layout/SidebarLeft/SidebarLeft";
// Import SidebarRight n·∫øu b·∫°n mu·ªën n√≥ hi·ªÉn th·ªã tr√™n trang ProfilePage
import SidebarRight from "../../components/layout/SidebarRight/SidebarRight";

function ProfilePage() {
  const [showAlert, setShowAlert] = useState(true);
  const [showEditModal, setShowEditModal] = useState(false);
  const [userProfile, setUserProfile] = useState(null);
  const { username } = useParams();
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState("posts"); // State ƒë·ªÉ qu·∫£n l√Ω tab ƒëang ho·∫°t ƒë·ªông

  // D·ªØ li·ªáu profile m·∫∑c ƒë·ªãnh/gi·∫£
  const defaultUserProfile = {
    name: "User Testing",
    username: "testuser",
    displayName: "Ng∆∞·ªùi d√πng Test",
    bio: "ƒê√¢y l√† m·ªôt t√†i kho·∫£n ·∫£o ƒë∆∞·ª£c t·∫°o ƒë·ªÉ ki·ªÉm tra giao di·ªán ng∆∞·ªùi d√πng. R·∫•t vui ƒë∆∞·ª£c k·∫øt n·ªëi!",
    location: "Viet Nam",
    website: "https://example.com",
    dateOfBirth: "2000-01-01T00:00:00Z",
    followeeCount: 123,
    followerCount: 456,
    postCount: 789,
    banner: "https://source.unsplash.com/1200x400/?abstract,tech",
    avatar: "https://source.unsplash.com/150x150/?person,face",
    isPremium: false,
  };

  useEffect(() => {
    const fetchUserProfile = async () => {
      const token = localStorage.getItem("token");
      const currentUsername = localStorage.getItem("username");

      if (!currentUsername || !token) {
        setUserProfile(defaultUserProfile);
        console.warn(
          "Kh√¥ng t√¨m th·∫•y username ho·∫∑c token trong localStorage. ƒêang s·ª≠ d·ª•ng d·ªØ li·ªáu profile m·∫∑c ƒë·ªãnh."
        );
        return;
      }

      try {
        const response = await fetch(
          `${process.env.REACT_APP_API_URL}/user/profile/${username}`,
          {
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${token}`,
            },
          }
        );

        if (!response.ok) {
          console.error(
            `L·ªói khi t·∫£i h·ªì s∆° (${response.status}): ${response.statusText}. S·ª≠ d·ª•ng d·ªØ li·ªáu profile m·∫∑c ƒë·ªãnh.`
          );
          setUserProfile(defaultUserProfile);
          return;
        }

        const data = await response.json();
        setUserProfile({
          ...data,
          banner:
            data.banner || "https://source.unsplash.com/1200x400/?nature,water",
          avatar:
            data.avatar || "https://source.unsplash.com/150x150/?portrait",
          postCount: data.postCount || 0,
          website: data.website || "",
          isPremium: data.isPremium || false,
        });
      } catch (error) {
        console.error("L·ªói khi t·∫£i h·ªì s∆°:", error.message);
        setUserProfile(defaultUserProfile);
      }
    };

    fetchUserProfile();
  }, [username]);

  const sampleTweets = [
    {
      id: 1,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      content: "Xin ch√†o t·ª´ t√†i kho·∫£n ·∫£o! #TestAccount",
      imageUrl: null,
      timestamp: new Date("2025-05-28T00:00:00Z"),
      comments: 0,
      retweets: 0,
      likes: 0,
    },
    {
      id: 2,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      content: "ƒêang th·ª≠ nghi·ªám giao di·ªán Profile Page. Tr√¥ng kh√° ·ªïn!",
      imageUrl:
        "https://via.placeholder.com/600x400/FF5733/ffffff?text=Mock+Image",
      timestamp: new Date("2025-05-29T10:00:00Z"),
      comments: 2,
      retweets: 1,
      likes: 5,
    },
    {
      id: 3,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      content: "React l√† m·ªôt th∆∞ vi·ªán tuy·ªát v·ªùi ƒë·ªÉ x√¢y d·ª±ng UI.",
      imageUrl: null,
      timestamp: new Date("2025-05-30T14:30:00Z"),
      comments: 1,
      retweets: 0,
      likes: 3,
    },
  ];

  // D·ªØ li·ªáu gi·∫£ cho tab "C√°c ph·∫£n h·ªìi"
  const sampleReplies = [
    {
      id: 101,
      user: {
        name: "Ph·∫£n h·ªìi Ng∆∞·ªùi d√πng",
        username: "replyuser",
        avatar: "https://via.placeholder.com/50",
      },
      content: "ƒê√¢y l√† m·ªôt ph·∫£n h·ªìi ƒë·∫øn b√†i ƒëƒÉng c·ªßa @testuser. #ReactJS",
      imageUrl: null,
      timestamp: new Date("2025-05-31T08:00:00Z"),
      comments: 0,
      retweets: 0,
      likes: 1,
      inReplyTo: userProfile?.username || "testuser",
    },
    {
      id: 102,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      content: "ƒê√∫ng v·∫≠y! R·∫•t th√≠ch l√†m vi·ªác v·ªõi React. #WebDev",
      imageUrl: null,
      timestamp: new Date("2025-06-01T11:20:00Z"),
      comments: 0,
      retweets: 0,
      likes: 2,
      inReplyTo: "replyuser",
    },
  ];

  // D·ªØ li·ªáu gi·∫£ cho tab "Ph∆∞∆°ng ti·ªán"
  const sampleMedia = [
    {
      id: 201,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      content: "C·∫£nh ho√†ng h√¥n tuy·ªát ƒë·∫πp h√¥m nay! #Photography",
      imageUrl: "https://source.unsplash.com/600x400/?sunset",
      timestamp: new Date("2025-05-27T18:00:00Z"),
      comments: 3,
      retweets: 2,
      likes: 10,
    },
    {
      id: 202,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      content: "Th·ª≠ nghi·ªám v·ªõi m·ªôt s·ªë hi·ªáu ·ª©ng ·∫£nh m·ªõi. #Art",
      imageUrl: "https://source.unsplash.com/600x400/?abstract",
      timestamp: new Date("2025-05-25T11:00:00Z"),
      comments: 1,
      retweets: 0,
      likes: 7,
    },
  ];

  // D·ªØ li·ªáu gi·∫£ cho tab "L∆∞·ª£t th√≠ch"
  const sampleLikes = [
    {
      id: 301,
      user: {
        name: "Ng∆∞·ªùi d√πng Kh√°c 1",
        username: "otheruser1",
        avatar: "https://via.placeholder.com/50",
      },
      content: "B√†i ƒëƒÉng r·∫•t hay! R·∫•t ƒë·ªìng √Ω. #GoodVibes",
      imageUrl: null,
      timestamp: new Date("2025-05-29T09:00:00Z"),
      comments: 0,
      retweets: 0,
      likes: 0,
    },
    {
      id: 302,
      user: {
        name: "Ng∆∞·ªùi d√πng Kh√°c 2",
        username: "otheruser2",
        avatar: "https://via.placeholder.com/50",
      },
      content: "H√¨nh ·∫£nh n√†y ƒë·∫πp qu√°! Tuy·ªát v·ªùi. #Nature",
      imageUrl: "https://source.unsplash.com/600x400/?mountain",
      timestamp: new Date("2025-05-28T16:00:00Z"),
      comments: 1,
      retweets: 0,
      likes: 0,
    },
  ];

  // D·ªØ li·ªáu gi·∫£ cho tab "S·ª± ki·ªán n·ªïi b·∫≠t"
  const sampleHighlights = [
    {
      id: 401,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      content: "ƒê·∫°t ƒë∆∞·ª£c 500 ng∆∞·ªùi theo d√µi! C·∫£m ∆°n t·∫•t c·∫£ m·ªçi ng∆∞·ªùi! üéâ",
      imageUrl: null,
      timestamp: new Date("2025-05-20T10:00:00Z"),
      comments: 15,
      retweets: 5,
      likes: 100,
      isHighlight: true, // ƒê√°nh d·∫•u ƒë√¢y l√† m·ªôt s·ª± ki·ªán n·ªïi b·∫≠t
    },
    {
      id: 402,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      content: "Ho√†n th√†nh d·ª± √°n React ƒë·∫ßu ti√™n! C·∫£m th·∫•y r·∫•t tuy·ªát v·ªùi. üí™",
      imageUrl: "https://source.unsplash.com/600x400/?coding,success",
      timestamp: new Date("2025-04-15T14:00:00Z"),
      comments: 8,
      retweets: 3,
      likes: 50,
      isHighlight: true,
    },
  ];

  // D·ªØ li·ªáu gi·∫£ cho tab "B√†i vi·∫øt" (ƒê√¢y c√≥ th·ªÉ l√† c√°c b√†i ƒëƒÉng d√†i h∆°n, blog post)
  const sampleArticles = [
    {
      id: 501,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      title: "C√°ch x√¢y d·ª±ng ·ª©ng d·ª•ng React c∆° b·∫£n",
      content:
        "Trong b√†i vi·∫øt n√†y, t√¥i s·∫Ω h∆∞·ªõng d·∫´n c√°c b·∫°n t·ª´ng b∆∞·ªõc x√¢y d·ª±ng m·ªôt ·ª©ng d·ª•ng React ƒë∆°n gi·∫£n t·ª´ ƒë·∫ßu...",
      imageUrl: "https://source.unsplash.com/600x400/?reactjs,programming",
      timestamp: new Date("2025-05-10T09:00:00Z"),
      readTime: "5 ph√∫t ƒë·ªçc",
    },
    {
      id: 502,
      user: {
        name: userProfile?.displayName || "Ng∆∞·ªùi d√πng Test",
        username: userProfile?.username || "testuser",
        avatar: userProfile?.avatar || "https://via.placeholder.com/50",
      },
      title: "10 m·∫πo ƒë·ªÉ t·ªëi ∆∞u h√≥a hi·ªáu su·∫•t website",
      content:
        "T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t website l√† r·∫•t quan tr·ªçng ƒë·ªÉ c·∫£i thi·ªán tr·∫£i nghi·ªám ng∆∞·ªùi d√πng...",
      imageUrl: "https://source.unsplash.com/600x400/?website,performance",
      timestamp: new Date("2025-04-20T11:00:00Z"),
      readTime: "8 ph√∫t ƒë·ªçc",
    },
  ];

  const handleEditClick = () => setShowEditModal(true);
  const handleCloseEditModal = () => setShowEditModal(false);

  const handleSaveProfile = (updatedData) => {
    setUserProfile((prevProfile) => ({
      ...prevProfile,
      ...updatedData,
    }));
    console.log("Profile updated:", updatedData);
  };

  const handlePremiumClick = () => {
    navigate("/premium");
  };

  // H√†m render n·ªôi dung cho tab "B√†i ƒëƒÉng"
  const renderPostsContent = () => (
    <div className="mt-0 border-top">
      {sampleTweets.map((tweet) => (
        <TweetCard key={tweet.id} tweet={tweet} />
      ))}
      {sampleTweets.length === 0 && (
        <p className="text-muted text-center p-4">Kh√¥ng c√≥ b√†i ƒëƒÉng n√†o.</p>
      )}
    </div>
  );

  // H√†m render n·ªôi dung cho tab "C√°c ph·∫£n h·ªìi"
  const renderRepliesContent = () => (
    <div className="mt-0 border-top">
      {sampleReplies.map((tweet) => (
        <TweetCard key={tweet.id} tweet={tweet} />
      ))}
      {sampleReplies.length === 0 && (
        <p className="text-muted text-center p-4">Kh√¥ng c√≥ ph·∫£n h·ªìi n√†o.</p>
      )}
    </div>
  );

  // H√†m render n·ªôi dung cho tab "Ph∆∞∆°ng ti·ªán"
  const renderMediaContent = () => (
    <div className="mt-0 border-top">
      {sampleMedia.map((tweet) => (
        <TweetCard key={tweet.id} tweet={tweet} />
      ))}
      {sampleMedia.length === 0 && (
        <p className="text-muted text-center p-4">Kh√¥ng c√≥ ph∆∞∆°ng ti·ªán n√†o.</p>
      )}
    </div>
  );

  // H√†m render n·ªôi dung cho tab "L∆∞·ª£t th√≠ch"
  const renderLikesContent = () => (
    <div className="mt-0 border-top">
      {sampleLikes.map((tweet) => (
        <TweetCard key={tweet.id} tweet={tweet} />
      ))}
      {sampleLikes.length === 0 && (
        <p className="text-muted text-center p-4">Kh√¥ng c√≥ l∆∞·ª£t th√≠ch n√†o.</p>
      )}
    </div>
  );

  // H√†m render n·ªôi dung cho tab "S·ª± ki·ªán n·ªïi b·∫≠t"
  const renderHighlightsContent = () => (
    <div className="mt-0 border-top">
      {sampleHighlights.map((tweet) => (
        <TweetCard key={tweet.id} tweet={tweet} />
      ))}
      {sampleHighlights.length === 0 && (
        <p className="text-muted text-center p-4">
          Kh√¥ng c√≥ s·ª± ki·ªán n·ªïi b·∫≠t n√†o.
        </p>
      )}
    </div>
  );

  // H√†m render n·ªôi dung cho tab "B√†i vi·∫øt"
  const renderArticlesContent = () => (
    <div className="mt-0 border-top">
      {sampleArticles.map((article) => (
        <div key={article.id} className="border-bottom p-3 hover-bg-light">
          <div className="d-flex align-items-center mb-2">
            <Image
              src={article.user.avatar}
              roundedCircle
              width="40"
              height="40"
              className="me-2"
            />
            <div>
              <span className="fw-bold">{article.user.name}</span>{" "}
              <span className="text-muted small">@{article.user.username}</span>
            </div>
          </div>
          <h5 className="fw-bold mb-1">{article.title}</h5>
          {article.imageUrl && (
            <Image
              src={article.imageUrl}
              fluid
              className="rounded mb-2"
              style={{ maxHeight: "200px", objectFit: "cover" }}
            />
          )}
          <p className="text-muted small">
            {article.content.substring(0, 150)}...
          </p>
          <div className="d-flex justify-content-between text-muted small">
            <span>
              {new Date(article.timestamp).toLocaleDateString("vi-VN")}
            </span>
            <span>{article.readTime}</span>
          </div>
        </div>
      ))}
      {sampleArticles.length === 0 && (
        <p className="text-muted text-center p-4">Kh√¥ng c√≥ b√†i vi·∫øt n√†o.</p>
      )}
    </div>
  );

  const renderActiveTabContent = () => {
    switch (activeTab) {
      case "posts":
        return renderPostsContent();
      case "replies":
        return renderRepliesContent();
      case "media":
        return renderMediaContent();
      case "likes":
        return renderLikesContent();
      case "highlights": // Th√™m case cho tab m·ªõi
        return renderHighlightsContent();
      case "articles": // Th√™m case cho tab m·ªõi
        return renderArticlesContent();
      default:
        return renderPostsContent();
    }
  };

  if (!userProfile) {
    return (
      <div className="d-flex justify-content-center align-items-center min-vh-100">
        <div>ƒêang t·∫£i h·ªì s∆°...</div>
      </div>
    );
  }

  return (
    <div className="d-flex min-vh-100 bg-light">
      {/* Sidebar tr√°i - hi·ªÉn th·ªã tr√™n m√†n h√¨nh l·ªõn */}
      <div className="d-none d-lg-block">
        <SidebarLeft />
      </div>

      {/* Main Content Area */}
      <div className="d-flex flex-column flex-grow-1">
        {/* Header cho trang Profile */}
        <div
          className="sticky-top bg-white border-bottom py-2"
          style={{ zIndex: 1020 }}
        >
          <Container fluid>
            <Row>
              <Col
                xs={12}
                md={8}
                lg={12}
                xl={12}
                className="mx-auto d-flex align-items-center ps-md-0"
              >
                <Link to="/" className="btn btn-link text-dark me-3">
                  <FaArrowLeft size={20} />
                </Link>
                <div>
                  <h5 className="mb-0 fw-bold">{userProfile.name}</h5>
                  <p className="text-muted small mb-0">
                    {userProfile.postCount} b√†i ƒëƒÉng
                  </p>
                </div>
              </Col>
            </Row>
          </Container>
        </div>

        {/* Main Profile Content */}
        <Container fluid className="flex-grow-1">
          <Row className="h-100">
            {/* C·ªôt ch√≠nh gi·ªØa ch·ª©a Profile v√† Tabs Content */}
            <Col
              xs={12}
              sm={12}
              md={12}
              lg={8}
              xl={7}
              className="px-md-0 border-start border-end"
            >
              {/* Banner Image */}
              <Image
                src={userProfile.banner}
                fluid
                className="w-100"
                style={{ height: "200px", objectFit: "cover" }}
              />

              <div className="position-relative p-3">
                {/* Avatar and Edit Profile Button */}
                <div className="d-flex justify-content-between align-items-end mb-3">
                  <Image
                    src={userProfile.avatar}
                    roundedCircle
                    className="border border-white border-4"
                    style={{
                      width: "130px",
                      height: "130px",
                      objectFit: "cover",
                      marginTop: "-75px",
                      zIndex: 2,
                    }}
                  />
                  <Button
                    variant="outline-dark"
                    className="rounded-pill fw-bold px-3 py-2"
                    onClick={handleEditClick}
                  >
                    Ch·ªânh s·ª≠a h·ªì s∆°
                  </Button>
                </div>

                {/* User Info */}
                <h4 className="mb-0 fw-bold">{userProfile.displayName}</h4>
                <p className="text-muted mb-2">@{userProfile.username}</p>

                {userProfile.bio && <p className="mb-2">{userProfile.bio}</p>}

                {userProfile.location && (
                  <p className="text-muted d-flex align-items-center mb-2">
                    <FaMapMarkerAlt size={16} className="me-2" />{" "}
                    {userProfile.location}
                  </p>
                )}

                {userProfile.website && (
                  <p className="text-muted d-flex align-items-center mb-2">
                    <FaLink size={16} className="me-2" />
                    <a
                      href={userProfile.website}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-decoration-none text-muted"
                    >
                      {userProfile.website}
                    </a>
                  </p>
                )}

                <p className="text-muted d-flex align-items-center mb-2">
                  <FaCalendarAlt size={16} className="me-2" />
                  Ng√†y sinh{" "}
                  {userProfile.dateOfBirth
                    ? new Date(userProfile.dateOfBirth).toLocaleDateString(
                        "vi-VN"
                      )
                    : "Ch∆∞a c·∫≠p nh·∫≠t"}
                </p>

                <div className="d-flex mb-3">
                  <Link to="#" className="me-3 text-dark text-decoration-none">
                    <span className="fw-bold">{userProfile.followeeCount}</span>{" "}
                    <span className="text-muted">ƒêang theo d√µi</span>
                  </Link>
                  <Link to="#" className="text-dark text-decoration-none">
                    <span className="fw-bold">{userProfile.followerCount}</span>{" "}
                    <span className="text-muted">Ng∆∞·ªùi theo d√µi</span>
                  </Link>
                </div>

                {showAlert && !userProfile.isPremium && (
                  <div
                    className="alert alert-success d-flex align-items-start"
                    role="alert"
                  >
                    <div>
                      <h6 className="alert-heading mb-1">
                        B·∫°n ch∆∞a ƒëƒÉng k√≠ premium t√†i kho·∫£n{" "}
                        <FaCheckCircle className="text-primary" />
                      </h6>
                      <p className="mb-2">
                        H√£y ƒëƒÉng k√≠ premium t√†i kho·∫£n ƒë·ªÉ s·ª≠ d·ª•ng t√≠nh nƒÉng ∆∞u
                        ti√™n tr·∫£ l·ªùi, ph√¢n t√≠ch, duy·ªát xem kh√¥ng c√≥ qu·∫£ng c√°o,
                        v.v. N√¢ng c·∫•p h·ªì s∆° ngay.
                      </p>
                      <Button
                        variant="dark"
                        className="rounded-pill px-4 fw-bold"
                        onClick={handlePremiumClick}
                      >
                        premium
                      </Button>
                    </div>
                    <Button
                      variant="link"
                      className="ms-auto text-dark p-0"
                      onClick={() => setShowAlert(false)}
                    >
                      &times;
                    </Button>
                  </div>
                )}

                {/* Navigation Tabs - Added nav-justified for even distribution */}
                <Nav
                  variant="underline"
                  className="mt-4 profile-tabs nav-justified"
                >
                  <Nav.Item>
                    <Nav.Link
                      onClick={() => setActiveTab("posts")}
                      className={`text-dark fw-bold ${
                        activeTab === "posts" ? "active" : ""
                      }`}
                    >
                      B√†i ƒëƒÉng
                    </Nav.Link>
                  </Nav.Item>
                  <Nav.Item>
                    <Nav.Link
                      onClick={() => setActiveTab("replies")}
                      className={`text-dark fw-bold ${
                        activeTab === "replies" ? "active" : ""
                      }`}
                    >
                      C√°c ph·∫£n h·ªìi
                    </Nav.Link>
                  </Nav.Item>
                  <Nav.Item>
                    <Nav.Link
                      onClick={() => setActiveTab("media")}
                      className={`text-dark fw-bold ${
                        activeTab === "media" ? "active" : ""
                      }`}
                    >
                      Ph∆∞∆°ng ti·ªán
                    </Nav.Link>
                  </Nav.Item>
                  <Nav.Item>
                    <Nav.Link
                      onClick={() => setActiveTab("likes")}
                      className={`text-dark fw-bold ${
                        activeTab === "likes" ? "active" : ""
                      }`}
                    >
                      L∆∞·ª£t th√≠ch
                    </Nav.Link>
                  </Nav.Item>
                  <Nav.Item>
                    <Nav.Link
                      onClick={() => setActiveTab("highlights")}
                      className={`text-dark fw-bold ${
                        activeTab === "highlights" ? "active" : ""
                      }`}
                    >
                      S·ª± ki·ªán n·ªïi b·∫≠t
                    </Nav.Link>
                  </Nav.Item>
                  <Nav.Item>
                    <Nav.Link
                      onClick={() => setActiveTab("articles")}
                      className={`text-dark fw-bold ${
                        activeTab === "articles" ? "active" : ""
                      }`}
                    >
                      B√†i vi·∫øt
                    </Nav.Link>
                  </Nav.Item>
                </Nav>
              </div>

              {/* Render content based on active tab */}
              {renderActiveTabContent()}
            </Col>

            {/* C·ªôt ph·∫£i - hi·ªÉn th·ªã tr√™n m√†n h√¨nh l·ªõn */}
            <Col
              xs={0}
              sm={0}
              md={0}
              lg={3}
              xl={3}
              className="d-none d-lg-block border-start border-end"
            >
              {/* B·∫°n c√≥ th·ªÉ th√™m SidebarRight ·ªü ƒë√¢y n·∫øu mu·ªën */}
              <SidebarRight />
              {/* <div className="p-3 sticky-top" style={{ top: "60px" }}>
                <h5 className="fw-bold mb-3">G·ª£i √Ω theo d√µi</h5>
                <div className="mb-3 d-flex align-items-center">
                  <Image
                    src="https://via.placeholder.com/40"
                    roundedCircle
                    className="me-2"
                  />
                  <span className="flex-grow-1">Ng∆∞·ªùi d√πng 1</span>
                  <Button
                    variant="outline-primary"
                    size="sm"
                    className="ms-auto rounded-pill"
                  >
                    Theo d√µi
                  </Button>
                </div>
                <div className="mb-3 d-flex align-items-center">
                  <Image
                    src="https://via.placeholder.com/40"
                    roundedCircle
                    className="me-2"
                  />
                  <span className="flex-grow-1">Ng∆∞·ªùi d√πng 2</span>
                  <Button
                    variant="outline-primary"
                    size="sm"
                    className="ms-auto rounded-pill"
                  >
                    Theo d√µi
                  </Button>
                </div>

                <h5 className="fw-bold mt-4 mb-3">Nh·ªØng ƒëi·ªÅu ƒëang di·ªÖn ra</h5>
                <p className="mb-1">#TrendingTopic1</p>
                <p className="mb-1">#TrendingTopic2</p>
              </div> */}
            </Col>
          </Row>
        </Container>
      </div>

      <EditProfileModal
        show={showEditModal}
        handleClose={handleCloseEditModal}
        userProfile={userProfile}
        onSave={handleSaveProfile}
        username={username}
      />
    </div>
  );
}

export default ProfilePage;
