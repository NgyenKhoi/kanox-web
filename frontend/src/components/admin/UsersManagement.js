import React, { useState, useEffect } from "react";

const UsersManagement = () => {
  // D·ªØ li·ªáu gi·∫£ cho ng∆∞·ªùi d√πng
  const [users, setUsers] = useState([
    {
      id: "u1",
      username: "nguyenvana",
      email: "vana@example.com",
      status: "active",
      role: "user",
      joined: "2023-01-15",
    },
    {
      id: "u2",
      username: "tranb",
      email: "tranb@example.com",
      status: "banned",
      role: "user",
      joined: "2022-11-01",
    },
    {
      id: "u3",
      username: "phamc",
      email: "phamc@example.com",
      status: "active",
      role: "admin",
      joined: "2023-03-20",
    },
    {
      id: "u4",
      username: "led",
      email: "led@example.com",
      status: "active",
      role: "moderator",
      joined: "2024-02-10",
    },
    {
      id: "u5",
      username: "maie",
      email: "maie@example.com",
      status: "suspended",
      role: "user",
      joined: "2023-07-05",
    },
  ]);

  const handleView = (id) => console.log(`Xem ng∆∞·ªùi d√πng ID: ${id}`);
  const handleEdit = (id) => console.log(`Ch·ªânh s·ª≠a ng∆∞·ªùi d√πng ID: ${id}`);
  const handleDelete = (id) => {
    if (window.confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ng∆∞·ªùi d√πng ID: ${id}?`)) {
      setUsers(users.filter((user) => user.id !== id));
      console.log(`ƒê√£ x√≥a ng∆∞·ªùi d√πng ID: ${id}`);
    }
  };
  const handleBan = (id) => {
    if (window.confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën c·∫•m ng∆∞·ªùi d√πng ID: ${id}?`)) {
      setUsers(
        users.map((user) =>
          user.id === id ? { ...user, status: "banned" } : user
        )
      );
      console.log(`ƒê√£ c·∫•m ng∆∞·ªùi d√πng ID: ${id}`);
    }
  };
  const handleUnban = (id) => {
    if (window.confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën b·ªè c·∫•m ng∆∞·ªùi d√πng ID: ${id}?`)) {
      setUsers(
        users.map((user) =>
          user.id === id ? { ...user, status: "active" } : user
        )
      );
      console.log(`ƒê√£ b·ªè c·∫•m ng∆∞·ªùi d√πng ID: ${id}`);
    }
  };
  const handleToggleAdmin = (id, currentRole) => {
    const newRole = currentRole === "admin" ? "user" : "admin";
    if (
      window.confirm(
        `B·∫°n c√≥ ch·∫Øc mu·ªën thay ƒë·ªïi vai tr√≤ c·ªßa ng∆∞·ªùi d√πng ID: ${id} th√†nh ${newRole}?`
      )
    ) {
      setUsers(
        users.map((user) =>
          user.id === id ? { ...user, role: newRole } : user
        )
      );
      console.log(
        `ƒê√£ thay ƒë·ªïi vai tr√≤ c·ªßa ng∆∞·ªùi d√πng ID: ${id} th√†nh ${newRole}`
      );
    }
  };

  return (
    <div className="p-6 bg-white rounded-lg shadow-md">
      <h2 className="text-3xl font-bold mb-6 text-gray-800">
        Qu·∫£n l√Ω Ng∆∞·ªùi d√πng
      </h2>
      <div className="overflow-x-auto">
        <table className="min-w-full bg-white border border-gray-200 rounded-lg">
          <thead className="bg-gray-100">
            <tr>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                ID
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                T√™n ng∆∞·ªùi d√πng
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                Email
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                Tr·∫°ng th√°i
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                Vai tr√≤
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                Ng√†y tham gia
              </th>
              <th className="py-3 px-4 border-b text-left text-gray-600 font-semibold text-sm">
                H√†nh ƒë·ªông
              </th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr
                key={user.id}
                className="border-b border-gray-200 last:border-b-0 hover:bg-gray-50"
              >
                <td className="py-3 px-4 text-gray-800">{user.id}</td>
                <td className="py-3 px-4 text-gray-800">{user.username}</td>
                <td className="py-3 px-4 text-gray-800">{user.email}</td>
                <td className="py-3 px-4">
                  <span
                    className={`px-2 py-1 rounded-full text-xs font-semibold
                    ${
                      user.status === "active"
                        ? "bg-green-100 text-green-800"
                        : user.status === "banned"
                        ? "bg-red-100 text-red-800"
                        : "bg-yellow-100 text-yellow-800"
                    }`}
                  >
                    {user.status === "active"
                      ? "Ho·∫°t ƒë·ªông"
                      : user.status === "banned"
                      ? "ƒê√£ c·∫•m"
                      : "ƒê√¨nh ch·ªâ"}
                  </span>
                </td>
                <td className="py-3 px-4">
                  <span
                    className={`px-2 py-1 rounded-full text-xs font-semibold
                    ${
                      user.role === "admin"
                        ? "bg-blue-100 text-blue-800"
                        : user.role === "moderator"
                        ? "bg-purple-100 text-purple-800"
                        : "bg-gray-100 text-gray-800"
                    }`}
                  >
                    {user.role === "admin"
                      ? "Qu·∫£n tr·ªã vi√™n"
                      : user.role === "moderator"
                      ? "Ki·ªÉm duy·ªát vi√™n"
                      : "Ng∆∞·ªùi d√πng"}
                  </span>
                </td>
                <td className="py-3 px-4 text-gray-800">{user.joined}</td>
                <td className="py-3 px-4">
                  <div className="flex space-x-2">
                    <button
                      onClick={() => handleView(user.id)}
                      className="p-2 rounded-full hover:bg-blue-100 text-blue-600 transition-colors duration-200"
                      title="Xem chi ti·∫øt"
                    >
                      üëÅÔ∏è {/* Bi·ªÉu t∆∞·ª£ng Xem */}
                    </button>
                    <button
                      onClick={() => handleEdit(user.id)}
                      className="p-2 rounded-full hover:bg-yellow-100 text-yellow-600 transition-colors duration-200"
                      title="Ch·ªânh s·ª≠a"
                    >
                      ‚úèÔ∏è {/* Bi·ªÉu t∆∞·ª£ng Ch·ªânh s·ª≠a */}
                    </button>
                    {user.status !== "banned" ? (
                      <button
                        onClick={() => handleBan(user.id)}
                        className="p-2 rounded-full hover:bg-red-100 text-red-600 transition-colors duration-200"
                        title="C·∫•m ng∆∞·ªùi d√πng"
                      >
                        üö´ {/* Bi·ªÉu t∆∞·ª£ng C·∫•m */}
                      </button>
                    ) : (
                      <button
                        onClick={() => handleUnban(user.id)}
                        className="p-2 rounded-full hover:bg-green-100 text-green-600 transition-colors duration-200"
                        title="B·ªè c·∫•m ng∆∞·ªùi d√πng"
                      >
                        ‚úÖ {/* Bi·ªÉu t∆∞·ª£ng B·ªè c·∫•m */}
                      </button>
                    )}
                    <button
                      onClick={() => handleToggleAdmin(user.id, user.role)}
                      className="p-2 rounded-full hover:bg-purple-100 text-purple-600 transition-colors duration-200"
                      title={
                        user.role === "admin"
                          ? "H·∫° c·∫•p th√†nh Ng∆∞·ªùi d√πng"
                          : "N√¢ng c·∫•p th√†nh Qu·∫£n tr·ªã vi√™n"
                      }
                    >
                      üõ°Ô∏è {/* Bi·ªÉu t∆∞·ª£ng Vai tr√≤ */}
                    </button>
                    <button
                      onClick={() => handleDelete(user.id)}
                      className="p-2 rounded-full hover:bg-gray-100 text-gray-600 transition-colors duration-200"
                      title="X√≥a ng∆∞·ªùi d√πng"
                    >
                      üóëÔ∏è {/* Bi·ªÉu t∆∞·ª£ng X√≥a */}
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default UsersManagement;
